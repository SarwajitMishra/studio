rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // isAdmin function to check for admin role
    function isAdmin() {
      // This now correctly checks the user's own role document without recursion.
      return get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.isAdmin == true;
    }

    // Rules for user roles
    match /roles/{userId} {
      // Allow a user to read their own role document. This breaks the recursive loop.
      // Admins can read any role document.
      allow get: if request.auth.uid == userId || isAdmin();
      // Only admins can create, update, or delete roles.
      allow write: if isAdmin();
    }
    
    // Rules for user profiles
    match /users/{userId} {
        // Any authenticated user can read any profile (e.g., to see author names).
        allow get: if request.auth != null;
        // Users can create and update their own profile. Admins can update any profile.
        allow write: if request.auth.uid == userId || isAdmin();
        // Allow admins to list all users.
        allow list: if isAdmin();
    }
    
    // This collection stores usernames to enforce uniqueness and is not meant for direct client reading.
    match /usernames/{username} {
      allow read: if false;
      // Creation is handled by the user profile creation transaction.
      allow write: if request.auth != null; 
    }

    // Rules for online sessions (basic for now)
    match /sessions/{sessionId} {
        allow read, write: if request.auth != null;
    }

    // --- Corrected Blog Rules ---
    match /blogs/{blogId} {
      // Anyone can read published blogs. Admins can read any blog.
      allow read: if resource.data.status == 'published' || isAdmin();
      
      // Allow users to create their own pending posts.
      // This rule does NOT check for isAdmin, as requested.
      allow create: if request.auth != null &&
                       request.resource.data.authorId == request.auth.uid &&
                       request.resource.data.status == 'pending';
      
      // Only Admins can update any post (e.g., to publish or reject it).
      allow update: if isAdmin();

      // Only Admins can delete any post.
      allow delete: if isAdmin();
    }
  }
}
